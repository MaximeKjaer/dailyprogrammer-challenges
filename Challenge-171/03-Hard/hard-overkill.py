#Order is decided by http://en.wikipedia.org/wiki/Letter_frequency
from __future__ import division

dictionary = {
	' ': '1',
	'E': '10',
	'T': '11',
	'O': '100',
	'R': '101',
	'A': '110',
	'S': '111',
	'I': '1000',
	'N': '1010',
	'M': '1011',
	'D': '1100',
	'Y': '1101',
	'L': '1110',
	'G': '1111',
	'P': '10000',
	'H': '10100',
	'B': '10101',
	'0': '10110',
	'F': '10111',
	'K': '11000',
	'U': '11010',
	'V': '11011',
	'1': '11100',
	'W': '11101',
	'C': '11110',
	'9': '11111',
	'3': '100000',
	'J': '101000',
	'X': '101010',
	'Q': '101011',
	'Z': '101100',
	'2': '101101',
	'4': '101110',
	'5': '101111',
	'6': '110000',
	'7': '110100',
	'8': '110101'
}
reversed_dictionary = {v:k for k, v in dictionary.items()}


#Here, I've generated codes for top 238 words. Every shortcut is shorter than its original code. They're not ordered here, but the first ones have the smallest amount of bits assigned to themg
word_dictionary = {'LIFE': '11101111', 'MAY': '11110110', 'THAT': '111010', 'WHEN': '1110101', 'OVER': '11111100', 'BETWEEN': '101011011', 'BACK': '11101010', 'PART': '110110101', 'NATIONAL': '1010100000', 'OFTEN': '1011101111', 'HAVE': '111000', 'BEGIN': '101111101', 'DURING': '111010111', 'LINE': '1011110100', 'WITH': '111101', 'THAN': '10101100', 'MUST': '111111010', 'AMONG': '1011110111', 'WOMAN': '11101101', 'LAST': '100000000', 'POWER': '1011101100', 'MANY': '11011011', 'PEOPLE': '1111010', 'HOWEVER': '1011111101', 'LONG': '1011010100', 'KEEP': '101110100', 'TURN': '110101010', 'SAY': '111110', 'MUCH': '101101000', 'EVERY': '110101100', 'BEFORE': '111110110', 'WEEK': '110111101', 'MOVE': '111100000', 'OFF': '111011110', 'FAMILY': '101101010', 'PROVIDE': '1011011011', 'COULD': '10101010', 'THREE': '101010110', 'HIGH': '101011100', 'WHICH': '1110110', 'YEAR': '1110000', 'THE': '110110', 'WHERE': '110101000', 'FIRST': '10111101', 'SCHOOL': '11111101', 'BECAUSE': '11000000', 'LOOK': '10111100', 'THIS': '111111', 'MONEY': '1010101000', 'AFTER': '11110111', 'GAME': '1011101110', 'DAY': '11010000', 'WILL': '1101100', 'THING': '11011000', 'ONLY': '11011101', 'HOUSE': '1011010111', 'KIND': '1010111101', 'YET': '1011110000', 'THOSE': '11011110', 'MAN': '11010101', 'ABOUT': '1101010', 'GROUP': '101111100', 'WANT': '10111010', 'BUSINESS': '1010111010', 'GOVERNMENT': '111011010', 'COUNTRY': '101111111', 'SOME': '1111000', 'STORY': '1010101010', 'DOWN': '11110101', 'STAND': '1011111010', 'HOME': '111111011', 'SUCH': '110111000', 'MONTH': '1010101101', 'FIND': '11010110', 'REALLY': '101011101', 'WATER': '111111101', 'WHAT': '1011000', 'JUST': '1111110', 'START': '110101101', 'GET': '1011101', 'COMPANY': '110111110', 'FATHER': '1011100000', 'SIT': '1011101000', 'BUT': '1010000', 'MILLION': '111111000', 'SOMETHING': '101011110', 'STUDY': '1010110000', 'END': '1011110110', 'AROUND': '1011011101', 'FOR': '111011', 'YOUNG': '1010101011', 'LOSE': '1011111100', 'TRY': '11111111', 'WITHOUT': '111110101', 'PLACE': '110110111', 'SHE': '1010111', 'UNDER': '111111100', 'WORD': '1010110111', 'YES': '1011011000', 'TODAY': '111101110', 'AND': '110111', 'HOW': '10101111', 'AREA': '1010000000', 'ITS': '10110100', 'AMERICAN': '110110000', 'THROUGH': '11101110', 'TIME': '1101110', 'NOT': '1010110', 'NOW': '10101011', 'ANY': '11101011', 'THEN': '10110000', 'THEM': '1110111', 'WHO': '1011100', 'SERVICE': '1011011100', 'GIVE': '11011010', 'THESE': '10111000', 'GREAT': '101111000', 'HEAD': '1010111111', 'WHILE': '101101111', 'PROGRAM': '111010100', 'KNOW': '1101011', 'THEY': '1000000', 'SMALL': '111011100', 'NEW': '10111111', 'NEXT': '111110100', 'MIGHT': '110101111', 'HELP': '110000000', 'CASE': '110111100', 'HOLD': '111101101', 'OLD': '101101110', 'HOUR': '1011101101', 'POINT': '111101011', 'WORK': '11110100', 'LIVE': '111101010', 'UNTIL': '1011101011', 'MEMBER': '1011111110', 'HAPPEN': '111110000', 'SEE': '1111111', 'IMPORTANT': '1011011111', 'ASK': '101000000', 'OUR': '10110101', 'STILL': '11111110', 'WHY': '101110110', 'TALK': '110100000', 'OUT': '1111100', 'AGAIN': '110111010', 'DIFFERENT': '1010101110', 'HER': '1011111', 'TOO': '101010100', 'SINCE': '1011011010', 'LARGE': '111110111', 'HERE': '11010111', 'NUMBER': '111011101', 'WRITE': '111111111', 'FEW': '110111011', 'STATE': '101010111', 'WAY': '10111011', 'WORLD': '11111011', 'NEED': '101010000', 'PROBLEM': '110101011', 'COME': '10101000', 'MOST': '101011111', 'EVEN': '11101000', 'LEAVE': '101101100', 'ALL': '1100000', 'BELIEVE': '111101100', 'RUN': '111011011', 'LIKE': '10101101', 'SHOULD': '11111000', 'BOOK': '1010110100', 'LET': '101110111', 'FRIEND': '1011011110', 'STUDENT': '101110101', 'EACH': '111000000', 'PUT': '101101101', 'EVER': '1011111000', 'TELL': '11011111', 'MORE': '10110111', 'USE': '11010100', 'FEEL': '101010101', 'NIGHT': '111101000', 'QUESTION': '111010110', 'POLITICAL': '1011110101', 'TWO': '10110110', 'BAD': '1011111011', 'BLACK': '1011010000', 'CAN': '1011011', 'LOT': '1010101111', 'SIDE': '1010111100', 'EYE': '1010110101', 'SEEM': '101111110', 'YOUR': '10100000', 'BOTH': '1011010101', 'LITTLE': '1011010110', 'HIS': '1010100', 'ISSUE': '1010111011', 'FAR': '1011000000', 'BIG': '101111011', 'AWAY': '1011101010', 'NEVER': '101011000', 'WELL': '11011100', 'ONE': '1101101', 'ALSO': '10111110', 'ANOTHER': '101100000', 'MOTHER': '1000000000', 'BECOME': '101011010', 'FOUR': '1010111110', 'THOUGH': '1010111000', 'HIM': '10000000', 'MEAN': '101110000', 'PLAY': '111011000', 'GOOD': '11101100', 'WOULD': '1011110', 'SHOW': '110110100', 'VERY': '11100000', 'INTO': '1111101', 'THERE': '1101111', 'OWN': '101101011', 'AGAINST': '110110110', 'THEIR': '1011010', 'OTHER': '10101110', 'HEAR': '111010101', 'HAND': '110101110', 'THINK': '1110100', 'ROOM': '111111110', 'RIGHT': '111010000', 'FROM': '1010101', 'ALWAYS': '111011111', 'MAKE': '1101000', 'SYSTEM': '110111111', 'SAME': '101111010', 'BRING': '111101111', 'JOB': '1010110110', 'CALL': '11111010', 'TAKE': '1111011', 'CHILD': '11110000', 'FACT': '1010101100'}
reversed_word_dictionary = {v:k for k, v in word_dictionary.items()}

#Exactly the same, but here, the keys in the dictionary above have been encoded with the encode() function
encoded_word_dictionary = {'1110100101000010001010': '1110101', '111000100000110110010': '111101010', '11000010000010111001011100100010100100010100011': '1010101110', '1000001011001000000100001010011001100010100011': '1011011111', '111010010000101001110001100': '11111011', '10110010000110010100001000101': '1000000000', '10100001000001011': '10000000', '10100001000110001100': '1010111111', '100011011001000101': '1011111000', '11000001010001000011101': '1101011', '111000100000110000010': '10101101', '111010010001110001110': '11011100', '101000100011011001000101': '101011000', '1110100101000010000011100010': '101101111', '11000101001000110': '1010000000', '100001110001100': '101101110', '1010001000011': '1010110', '111001100010110010': '101111010', '11010001110010': '11010100', '1010110011010001000111001100100000100001010': '111010110', '101100110001010': '11010101', '11000111100110001000001010001110011': '110110110', '1100001101000101001000001010001111': '111010111', '110001010001101': '11101011', '110001010001100': '110111', '1010010000100001011': '111111110', '101010010001011100100001010010': '111110110', '100000011100011000111100010': '110110111', '10100001000010110010': '111111011', '110010000100': '101010100', '11101001010000100000111100010100': '1110110', '1111001010010001100011': '101111000', '1100101000010': '110110', '110001110001110': '1100000', '101010010001110001000001000110110010': '111101100', '1011001000010100010001101': '1010101000', '101100100001010010': '10110111', '11100110011010001100001101': '1010110000', '11101001000100011000': '110111101', '101110010100100001011': '1010101', '10100001000011101': '10101111', '110001011001000101001000001111000110001010': '110110000', '111010010100100000110010': '111111111', '1100101000010001010': '10110000', '1100101000010001011': '1110111', '1110010100001000011101': '110110100', '101001000110001110001110001101': '101011101', '11100100010001011': '101111110', '1010000110001000000100000010001010': '111110000', '101110011000101': '1011000000', '1100101001101': '11111111', '1010000100011100010000': '110000000', '11101001100010100011': '10111010', '110010001110001110': '11011111', '11101001100011001000101': '111111101', '10111001010010000010001010001100': '1011011110', '1011100100001101000101': '1010111110', '1000000111000110001101': '111011000', '1110001000011': '1010101111', '111100100011': '1011101', '1101001000111': '1011011000', '101100110001010001101': '11011011', '11101001000001110001110': '1101100', '111010010100001101': '101110110', '11001010000110001010': '10101100', '11110001000010110010': '10101000', '1100001000011101001010': '11110101', '1000000110100011': '101101101', '10100010001010100011': '111110100', '11000111000111010011000110100111': '111011111', '1000001110011100110100010': '1010111011', '1100010100010000110010100001000101': '101100000', '10110010000101000110010100': '1010101101', '111000100011000110110010': '101101100', '101000100010001100': '101010000', '1011100100010001110': '101010101', '11000001000100010000': '101110100', '1010100100011110001100011010001110010': '11000000', '1000000110001010011': '110110101', '110010000010110010': '1101110', '1110011001101000110000100010100011': '101110101', '100011011001000101001101': '110101100', '11100100000101000111100010': '1011011010', '10111001000001010001100': '11010110', '1000110110010001010': '11101000', '110010100001010010000110100011110010100': '11101110', '10000001010010000101010011100010001011': '110101011', '101000010001010010': '11010111', '11001101000101001010': '110101010', '10000101110010111': '111011110', '1010100110100011100100000101000100011100111': '1010111010', '10110011000110000010': '1101000', '111001100110001010001100': '1011111010', '110001110100110001101': '1011101010', '10000110100011': '1111100', '11101001000011010001110001100': '1011110', '101000010000011110010100': '101011100', '10100001000011010001110010': '1011010111', '1000001010001100100': '1111101', '1110001000001100110011100010': '1011010110', '1000011101001010': '101101011', '111000100001000011000': '10111100', '10100100000111100101000011': '111010000', '111010010100001100011': '1011000', '11000101110011001000101': '11110111', '11101001010000100': '1011100', '11001100011100011000': '110100000', '1110010100001000011010001110001100': '11111000', '1101001000011010': '111100', '1010100100011110001000010110010': '101011010', '111000100011': '101110111', '101100100000111000111000100000100001010': '111111000', '1100101000010001010010': '1101111', '101110011000110010100001000101': '1011100000', '111010010000101001100': '1010110111', '10000001010010000110110010000011000010': '1011011011', '101000100011101': '10111111', '101100100010110010101001000101': '1011111110', '1010000100011000101': '111010101', '1110011001000001110001110': '11111110', '110010000110000110001101': '111101110', '1011100100011101': '110111011', '11001110100100': '10110110', '1010000100000111': '1010100', '101010010001111001000001010': '101111101', '1100101000010000110100011110010100': '1010111000', '1110011010011100110010001011': '110111111', '1011100110001011001000001110001101': '101101010', '1010100101001000001010001111': '111101111', '1011100100000101001110011': '10111101', '11100110010000101001101': '1010101010', '111100100000110110010': '11011010', '11000001000001010001100': '1010111101', '110010100001100011': '111010', '1111001100010110010': '1011101110', '1010000100001110100100011011001000101': '1011111101', '111001101000111100010100': '110111000', '111100010100001000001110001100': '11110000', '11000101001000011010001010001100': '1011011101', '101110011000111100011': '1010101100', '111001100110001010011': '110101101', '11000111100110001000001010': '110111010', '111000100000101110010': '11101111', '11000101100100001010001111': '1011110111', '1010011010001010': '111011011', '1000010100010': '1101101', '11100100001011001000110010100001000001010001111': '101011110', '101010011000111100011000': '11101010', '10000001000011100010000011001000001111000110001110': '1011110101', '110100100011': '1011110000', '1011001101000111100010100': '101101000', '11001010000100000111': '111111', '1010000011010001110011': '1111110', '10110011010001110011': '111111010', '100001010001110001101': '11011101', '1010100110001100': '1011111011', '11100101000010': '1010111', '1000000100010000100000011100010': '1111010', '1010000110001010001100': '110101110', '1010000100001101000101': '1011101101', '1110100110001101': '10111011', '1100101000010100100010': '101010110', '101100110001101': '11110110', '1000000101001000011110010100110001011': '111010100', '110100100011000101': '1110000', '1010100100011001110100100010001010': '101011011', '11110001000011010001110001100': '10101010', '11100110011000110010': '101010111', '1100101000010000010100011000': '1110100', '111100100001101100100010100101000101100100010100011': '111011010', '1000001100111': '10110100', '11100101100110001110001110': '111011100', '11011001000101001101': '11100000', '1111000110001110010': '110111100', '110100010100011001000001110': '1011101011', '1110100100000110010100': '111101', '1100011100011100100': '10111110', '110010100001000001010001111': '11011000', '10001010001100': '1011110110', '100011010010': '1010110101', '11110010000100001100': '11101100', '1111000110001010': '1011011', '101100100000111100101000011': '110101111', '111000110001110011': '100000000', '1111000100001011001000000110001010001101': '110111110', '110010100001000100000101': '1011010', '101000110100010110010101001000101': '111011101', '111010010000101100110001010': '11101101', '101000011000110110010': '111000', '111001000101001101100100000111100010': '1011011100', '1100101000010001101': '1000000', '11001010000100001110010': '11011110', '11100010000010100010': '1011110100', '1101001000011010001010001111': '1010101011', '1000011011001000101': '11111100', '100001011100110010001010': '1011101111', '110100100001101000101': '10100000', '1111001010010000110100010000': '101111100', '101000100000111100101000011': '111101000', '1100101000010001110010': '10111000', '101010011100011000111100011000': '1011010000', '10000001000011101001000101': '1011101100', '111001000010110010': '1111000', '1010000100001110001100': '111101101', '110001110011000': '101000000', '1110010000011': '1011101000', '11000101010010000110100011': '1101010', '10100001000101': '1011111', '10101001000001111': '101111011', '11100100010': '1111111', '11110001000011010001010001100101001101': '101111111', '111000110001010011110010': '111110111', '10000110010100001000101': '10101110', '10100011000110010000010000101000110001110': '1010100000', '1011001000110001010': '101110000', '10110010000110110010': '111100000', '11100110001101': '111110', '11101001000001100101000010000110100011': '111110101', '101000001000010101': '1010110110', '101100100001110011': '101011111', '101110010000101': '111011', '1111000110001110001110': '11111010', '101010010000110010100': '1011010101', '10000001000010000010100011': '111101011', '1110010000011000010': '1010111100', '1010001000011101': '10101011', '111001111000101000010000100001110': '11111101', '110000110001101': '11010000', '1010100100001000011000': '1010110100', '1110100100001010011000': '11110100', '111000100001110010': '1011111100', '11010001010001100001000101': '111111100', '111000100001010001111': '1011010100', '100001101000101': '10110101', '100011000111100010100': '111000000', '1010100110100011': '1010000', '1110100101000010001010010': '110101000', '110011000110000010': '1111011'}
reversed_encoded_word_dictionary = {v:k for k, v in encoded_word_dictionary.items()}

text = ['REMEMBER TO DRINK YOUR OVALTINE',
		'GIANTS BEAT DODGERS 10 TO 9 AND PLAY TOMORROW AT 1300',
		'SPACE THE FINAL FRONTIER THESE ARE THE VOYAGES OF THE BIT STREAM DAILY PROGRAMMER TO SEEK OUT NEW COMPRESSION',
		]
decryption_dictionary = dict(reversed_word_dictionary.items() + reversed_dictionary.items())


def encode(string):
	
	#REPLACING WORDS WITH THEIR SHORTHAND
	output = string
	for plain, short in word_dictionary.items():
		if ' ' + plain + ' ' in output:
			output = output.replace(plain, '#%'+short+'#')
	for plain, short in word_dictionary.items():
		if plain in output:
			output = output.replace(plain, '#%'+short+'#') # I'll be using #% # to show that this isn't a string that you want to mess with
	output = output.split('#')
	print output
	final_output = ''
	for part in output:
		if '%' not in part:
			for char in part:
				final_output = final_output + '00' + dictionary[char.upper()]
		else:
			final_output = final_output + '00' + part.replace('%', '')
	return final_output[2:]

def decode(string):
	output = string.replace('001', '#1').split('#')
	output = [decryption_dictionary[char] for char in output if char!='']
	return ''.join(output)

def challenge(string):
	print "Read message of", len(string), "Bytes"
	a = encode(string)
	print "Compressing ", len(string)*8, " Bits into ", len(a), " Bits (", 100-len(a)/(len(string)*8)*100.0, "% compression)"
	print "Sending Message."
	print "Decompressing Message into", len(string) ,"Bytes."

	b = decode(a)
	if b==string:
		print "Message Matches!"
	else:
		print "Doesn't match. Light pulses will destroy Universe. 42."
	print ""


for line in text:
	challenge(line)
